const smallTask = document.getElementById('small-task');
const mediumTask = document.getElementById('medium-task');
const largeTask = document.getElementById('large-task');
const saveButton = document.getElementById('save-tasks');
const orderSelect = document.getElementById('order-select');
const dailyLog = document.getElementById('daily-log');
const viewWeeklyLogButton = document.getElementById('view-weekly-log');

const MAX_TASKS = 9;

function saveTasks() {
    const date = new Date().toLocaleDateString('ja-JP');
    const taskText = `${date}: ${smallTask.value || mediumTask.value || largeTask.value} (${getOrderEmoji(orderSelect.value)})`;

    let dayLog = JSON.parse(localStorage.getItem('dailyLog')) || [];
    if (dayLog.length < MAX_TASKS) {
        dayLog.push(taskText);
        localStorage.setItem('dailyLog', JSON.stringify(dayLog));
        updateDailyLog();
        clearInputs();
    } else {
        alert('„Çø„Çπ„ÇØ„ÅÆÊúÄÂ§ßÊï∞„Å´ÈÅî„Åó„Åæ„Åó„ÅüÔºÅ (Maximum number of tasks reached!)');
    }
}

function updateDailyLog() {
    const dayLog = JSON.parse(localStorage.getItem('dailyLog')) || [];
    dailyLog.innerHTML = '';
    dayLog.forEach(task => {
        const div = document.createElement('div');
        div.textContent = task;
        div.classList.add('log-data'); 
        dailyLog.appendChild(div);
    });
}

function getOrderEmoji(order) {
    switch(order) {
        case 'frog': return 'üê∏';
        case 'summit': return 'üóª';
        case 'burn': return 'üèÉüèº';
        default: return '';
    }
}

function clearInputs() {
    smallTask.value = '';
    mediumTask.value = '';
    largeTask.value = '';
}

function viewWeeklyLog() {
    const weekLog = JSON.parse(localStorage.getItem('weekLog')) || [];
    if (weekLog.length === 0) {
        alert('ÈÄ±Èñì„É≠„Ç∞„ÅØÁ©∫„Åß„Åô„ÄÇ (Weekly log is empty.)');
        return;
    }
    const formattedLog = weekLog.map(entry => {
        const date = entry.date || 'Êó•‰ªò‰∏çÊòé (Unknown Date)';
        const tasks = [
            entry.small ? `Â∞è„Åï„ÅÑ: ${entry.small}` : '',
            entry.medium ? `‰∏≠„Åè„Çâ„ÅÑ: ${entry.medium}` : '',
            entry.large ? `Â§ß„Åç„ÅÑ: ${entry.large}` : ''
        ].filter(Boolean).join(', ');
        const order = entry.order ? `È†ÜÂ∫è: ${getOrderEmoji(entry.order)}` : '';
        return `${date}: ${tasks} (${order})`;
    }).join('\n');
    alert(`ÈÄ±Èñì„É≠„Ç∞:\n${formattedLog}`);
}

saveButton.addEventListener('click', saveTasks);
viewWeeklyLogButton.addEventListener('click', viewWeeklyLog);

updateDailyLog();
