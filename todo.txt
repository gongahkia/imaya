(A) Desired app features @idea
    Analogy of Pools with different sized tasks, Stream (SMALL tasks), River (MEDIUM tasks), Ocean (LARGE tasks)
        Stream represents small tasks (gentle, manageable)
        River for medium tasks (steady flow)
        Ocean for large tasks (deep focus)
    Plan Your Day where each Pool limits you to 3 tasks, one large, one medium and one small, to help reduce task overwhelm and maximise achievement
    Types of POOLS
        ‍💧 SMALL for an easy win - this could be an administrative task or personal wellbeing time.
            Focus: Light, habitual 
            Timings: 15-30 minutes
            Context: Administrative or wellbeing
            Example: Clear emails, yoga session, file documents
        🏞️ MEDIUM for tasks with a medium level of energy and focus, but not all your attention.
            Focus: Balanced, analytical
            Timings: 45-60 minutes
            Context: Project-orientated, incoming, process-based
            Example: Email campaign, schedule social media, finish presentation 
        🌊 LARGE for tasks with a need for deep focus — that means as little distraction as possible including meetings.
            Focus: Creative, intense
            Timings: 90+ minutes
            Context: Deliverable-oriented
            Example: Write report, edit video, project deliverable 
    Pool orders 
        🐸 Eat That Frog is taken from the classic productivity book of the same name by Brian Tracey: LARGE --> MEDIUM --> SMALL
        🗻 Climb The Summit is a balanced approach to your day: MEDIUM --> LARGE --> SMALL 
        🏃🏼 Slow Burn is perfect for slow-starters to the day: SMALL --> MEDIUM --> LARGE 
    Recommended way to use Imaya is to plan each day on the day itself @ the start of that day ++ to live presently Imaya clears the weekly log at the end of the week so that you always start on a fresh slate
(A) Intended user flow would be at the start of the day, users are able to define their POOLS for that day @idea
(A) Users are only able to specify their pools for that day, it has to be on the day itself to avoid overplanning and overambition and to avoid changing the past @idea
(A) Keep a weekly/monthly log (AT MOST) that shows users what they achieved that month but no further, so that users aren't discouraged or riding momentum, to encourage being intentional about living in the present --> consider making this WEEKLY or YEARLY depending on feedback @idea

(B) Use JAPANESE CHARACTERS for most things and labels with English option to cater to the weaboo demographic  @feature
(B) Give the user key-binds within the browser like option-space / alt-space that open an overlay similar to Microsoft powetoys, that will then search within the weekly log whch is stored within browser cache @feature
(B) Ensure that the weekly log is stored till the end of the week (defined as Saturday) and every Sunday the weekly log resets to avoid exceeding browser cache @feature
(B) Fix the broken emojis display @feature
(B) Debug broken weekly task log display @feature
(B) Consider implementing the dynamic dragging and dropping of tasks that tangibly and actively changes the JSON structure of tasks with the HTML drag and drop API @feature
(B) Add option to reorder tasks by dragging and dropping, add option to delete tasks, fix how tasks are being displayed, fix how tasks are being renderd, allow editing of existing tasks, add task descriptions as well so clicking into them opens the task pop-up @feature
(B) Debug the existing broken site in HTML, CSS and JS first @feature
(B) Add a console log statement to see how things are being saved in browser cache and to actively tweak how things will be displayed and dealt with as data @feature
(B) Leach on a minimalist, possibly monochrome (to fit the nothing and light phone) aesthetic @feature
(B) Focus on having a chill app that runs properly and quickly with SMOOTH transitions  @feature
(B) Refine the CSS-animated homepage that plays as an overlay before the main Imaya landing page appears @feature
(B) Consider adding a seperate HTML page that shows up to view the user' weekly logs, so there is more space for the existing today's logs + can leverage on localStorage as an option @feature
(B) Might be an unnecessary feature but give the user a custom-cursor if they want @feature
(B) Remove all the debugging console.log()s scattered throughout the script.js file @debug
(B) Add a japanese-language option of every single page so there is home-jp.html and index-jp.html, plus buttons that transition to those as required @feature
(B) Ensure that the Japanese translations on all the *-jp.html pages are accurate and correct @feature

(B) When done debugging site and implementing all desired features, migrate to mobile using Ionic @feature
(B) Possible frameworks / languages to look into for developing Imaya @idea @dev
    * React Native
    * Ionic
    * Xamarin
    * Adobe Phonegap Cordova
    * Nativescript
    * Kotlin
    * Flutter (Dart)
    * C#
    * Swift

--- APP IDEAS ---

(C) Add time tracking with forest-like features with minimalist style  @feature
(C) Consider an all-in-one productivity app that has first-class LOCAL storage @feature
(C) After app is up, implement secondary syncing storage with Google Drive and allow users to alternatively specify their own file server via FTP  @feature
(C) Consider making an app that integrates with my existing productivity workflow and has an area to record stationary usage and fountain pens and pocket notebooks @feature
(C) Consider making it a single HUB app that branches and links to all apps that i want to use similar to Android OS launcher apps, allowing users to specify their own launch configuration, see https://www.thelightphone.com/ light phone's UI  @feature

(D) Add a tutorial screen as a seperate overlay that says "<App name> respects you as an individual and treats you like an adult. It will not hold your hand. We as the developers hope it will help you become the best version of yourself you can be." @feature
(D) Add a detailed tutorial of all possible features and the generic expected user flow. @feature

(E) Be intentional about and add any and all relevant UNIT TESTS to allow for the application to be heavily unit tested before going out into production @test
(E) See industry standards for CI/CD pipelines for android apps and implement and run them @test

(F) Fill out the README.md with more details @admin
(F) Add mermaid diagrams of 1. ARCHITECTURE, 2. EXPECTED USER FLOW, 3. Any additional relevant diagrams that need to be added @admin
(F) Specify the app is open-source but under protected license  @admin
(F) Add additional legal disclaimers to absolve myself of any liability @admin
(F) See whether I'm able to add automated badges to the README.md that update the CI/CD status of the application at all times @admin
(F) Specify in the README.md how many days I took to deploy the app and include images of the date of my first commit and the date of my last commit @admin
(F) Draw a nice app logo on ipad @admin
(F) Draw a nice app logo for the repo @admin
(F) Specify the references from the base of this todo.txt to the README as well @admin
(F) Remove todo.txt from the git commits and add it to .gitignore @admin
(F) Can reference the flow state in the README.md @admin
(F) Add this as a reference research article https://www.reddit.com/r/ProductivityApps/comments/1hs5e9a/upgrade_task_management_in_2025/ @idea
(F) Add detailed usage instructions to the README.md @admin

(G) Actually deploy the app to the Google Play Store via Google Play Console https://play.google.com/console before the 60 day deadline is up @deploy

(H) Make a post about the app on Linkedin and put Kotlin as a programming language I can use on my resume @publicity

(I) If the app is good enough then figure out if i want to port it over to iphone and code it out entirely in Swift @future
(I) If the app is good enough then figure out if i want to port it over to desktop and code it out entirely in C# or see what languages exist @future

--- REFERENCES ---

Visual and navigation reference simplicity-wise
MOODA https://apps.apple.com/us/app/mooda/id6449689589
MOODIE https://apps.apple.com/us/app/moodie-mood-diary-with-lock/id1640383777
SMILE TO DO https://apps.apple.com/us/app/smile-todo-time-management/id1551532207
MUJI WATER BOTTLE https://www.muji.com/sg/products/cmdty/detail/4550182930801

Articles
https://medium.com/@jindal.ankit89/just-9-tasks-per-day-can-change-your-life-forever-1bbceb220d91
https://www.reddit.com/r/productivity/comments/1gd0kpk/how_many_tasks_do_you_handle_in_a_day/
